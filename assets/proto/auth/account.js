"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.4
//   protoc               v5.28.2
// source: account.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountInfo = exports.Account = exports.Password = exports.Email = exports.protobufPackage = void 0;
/* eslint-disable */
var wire_1 = require("@bufbuild/protobuf/wire");
exports.protobufPackage = "account";
function createBaseEmail() {
    return { email: "" };
}
exports.Email = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.email !== "") {
            writer.uint32(10).string(message.email);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseEmail();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.email = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return { email: isSet(object.email) ? globalThis.String(object.email) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.email !== "") {
            obj.email = message.email;
        }
        return obj;
    },
    create: function (base) {
        return exports.Email.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseEmail();
        message.email = (_a = object.email) !== null && _a !== void 0 ? _a : "";
        return message;
    },
};
function createBasePassword() {
    return { password: "" };
}
exports.Password = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.password !== "") {
            writer.uint32(10).string(message.password);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBasePassword();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.password = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return { password: isSet(object.password) ? globalThis.String(object.password) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.password !== "") {
            obj.password = message.password;
        }
        return obj;
    },
    create: function (base) {
        return exports.Password.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBasePassword();
        message.password = (_a = object.password) !== null && _a !== void 0 ? _a : "";
        return message;
    },
};
function createBaseAccount() {
    return { email: undefined, password: undefined, isCompany: false };
}
exports.Account = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.email !== undefined) {
            exports.Email.encode(message.email, writer.uint32(10).fork()).join();
        }
        if (message.password !== undefined) {
            exports.Password.encode(message.password, writer.uint32(18).fork()).join();
        }
        if (message.isCompany !== false) {
            writer.uint32(24).bool(message.isCompany);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseAccount();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.email = exports.Email.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.password = exports.Password.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.isCompany = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            email: isSet(object.email) ? exports.Email.fromJSON(object.email) : undefined,
            password: isSet(object.password) ? exports.Password.fromJSON(object.password) : undefined,
            isCompany: isSet(object.isCompany) ? globalThis.Boolean(object.isCompany) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.email !== undefined) {
            obj.email = exports.Email.toJSON(message.email);
        }
        if (message.password !== undefined) {
            obj.password = exports.Password.toJSON(message.password);
        }
        if (message.isCompany !== false) {
            obj.isCompany = message.isCompany;
        }
        return obj;
    },
    create: function (base) {
        return exports.Account.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseAccount();
        message.email = (object.email !== undefined && object.email !== null) ? exports.Email.fromPartial(object.email) : undefined;
        message.password = (object.password !== undefined && object.password !== null)
            ? exports.Password.fromPartial(object.password)
            : undefined;
        message.isCompany = (_a = object.isCompany) !== null && _a !== void 0 ? _a : false;
        return message;
    },
};
function createBaseAccountInfo() {
    return { email: undefined, isCompany: false };
}
exports.AccountInfo = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.email !== undefined) {
            exports.Email.encode(message.email, writer.uint32(10).fork()).join();
        }
        if (message.isCompany !== false) {
            writer.uint32(16).bool(message.isCompany);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseAccountInfo();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.email = exports.Email.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.isCompany = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            email: isSet(object.email) ? exports.Email.fromJSON(object.email) : undefined,
            isCompany: isSet(object.isCompany) ? globalThis.Boolean(object.isCompany) : false,
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.email !== undefined) {
            obj.email = exports.Email.toJSON(message.email);
        }
        if (message.isCompany !== false) {
            obj.isCompany = message.isCompany;
        }
        return obj;
    },
    create: function (base) {
        return exports.AccountInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseAccountInfo();
        message.email = (object.email !== undefined && object.email !== null) ? exports.Email.fromPartial(object.email) : undefined;
        message.isCompany = (_a = object.isCompany) !== null && _a !== void 0 ? _a : false;
        return message;
    },
};
function isSet(value) {
    return value !== null && value !== undefined;
}
