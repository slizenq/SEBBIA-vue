"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               v5.27.3
// source: assets/proto/cloudevent.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudEventServiceClient = exports.CloudEventServiceService = exports.SubscriptionRequest = exports.PublishRequest = exports.CloudEventAttributeValue = exports.CloudEvent_AttributesEntry = exports.CloudEvent = exports.protobufPackage = void 0;
/* eslint-disable */
var grpc_js_1 = require("@grpc/grpc-js");
var _m0 = require("protobufjs/minimal");
var any_1 = require("../../google/protobuf/any");
var empty_1 = require("../../google/protobuf/empty");
var timestamp_1 = require("../../google/protobuf/timestamp");
var Long = require("long");
exports.protobufPackage = "io.cloudevents.v1";
function createBaseCloudEvent() {
    return {
        id: "",
        source: "",
        specVersion: "",
        type: "",
        attributes: {},
        binaryData: undefined,
        textData: undefined,
        protoData: undefined,
    };
}
exports.CloudEvent = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.id !== "") {
            writer.uint32(10).string(message.id);
        }
        if (message.source !== "") {
            writer.uint32(18).string(message.source);
        }
        if (message.specVersion !== "") {
            writer.uint32(26).string(message.specVersion);
        }
        if (message.type !== "") {
            writer.uint32(34).string(message.type);
        }
        Object.entries(message.attributes).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.CloudEvent_AttributesEntry.encode({ key: key, value: value }, writer.uint32(42).fork()).ldelim();
        });
        if (message.binaryData !== undefined) {
            writer.uint32(50).bytes(message.binaryData);
        }
        if (message.textData !== undefined) {
            writer.uint32(58).string(message.textData);
        }
        if (message.protoData !== undefined) {
            any_1.Any.encode(message.protoData, writer.uint32(66).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCloudEvent();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.id = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.source = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.specVersion = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.type = reader.string();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    var entry5 = exports.CloudEvent_AttributesEntry.decode(reader, reader.uint32());
                    if (entry5.value !== undefined) {
                        message.attributes[entry5.key] = entry5.value;
                    }
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.binaryData = reader.bytes();
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.textData = reader.string();
                    continue;
                case 8:
                    if (tag !== 66) {
                        break;
                    }
                    message.protoData = any_1.Any.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            id: isSet(object.id) ? globalThis.String(object.id) : "",
            source: isSet(object.source)
                ? globalThis.String(object.source)
                : "",
            specVersion: isSet(object.specVersion)
                ? globalThis.String(object.specVersion)
                : "",
            type: isSet(object.type) ? globalThis.String(object.type) : "",
            attributes: isObject(object.attributes)
                ? Object.entries(object.attributes).reduce(function (acc, _a) {
                    var key = _a[0], value = _a[1];
                    acc[key] = exports.CloudEventAttributeValue.fromJSON(value);
                    return acc;
                }, {})
                : {},
            binaryData: isSet(object.binaryData)
                ? Buffer.from(bytesFromBase64(object.binaryData))
                : undefined,
            textData: isSet(object.textData)
                ? globalThis.String(object.textData)
                : undefined,
            protoData: isSet(object.protoData)
                ? any_1.Any.fromJSON(object.protoData)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.id !== "") {
            obj.id = message.id;
        }
        if (message.source !== "") {
            obj.source = message.source;
        }
        if (message.specVersion !== "") {
            obj.specVersion = message.specVersion;
        }
        if (message.type !== "") {
            obj.type = message.type;
        }
        if (message.attributes) {
            var entries = Object.entries(message.attributes);
            if (entries.length > 0) {
                obj.attributes = {};
                entries.forEach(function (_a) {
                    var k = _a[0], v = _a[1];
                    obj.attributes[k] = exports.CloudEventAttributeValue.toJSON(v);
                });
            }
        }
        if (message.binaryData !== undefined) {
            obj.binaryData = base64FromBytes(message.binaryData);
        }
        if (message.textData !== undefined) {
            obj.textData = message.textData;
        }
        if (message.protoData !== undefined) {
            obj.protoData = any_1.Any.toJSON(message.protoData);
        }
        return obj;
    },
    create: function (base) {
        return exports.CloudEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g;
        var message = createBaseCloudEvent();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : "";
        message.source = (_b = object.source) !== null && _b !== void 0 ? _b : "";
        message.specVersion = (_c = object.specVersion) !== null && _c !== void 0 ? _c : "";
        message.type = (_d = object.type) !== null && _d !== void 0 ? _d : "";
        message.attributes = Object.entries((_e = object.attributes) !== null && _e !== void 0 ? _e : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[key] = exports.CloudEventAttributeValue.fromPartial(value);
            }
            return acc;
        }, {});
        message.binaryData = (_f = object.binaryData) !== null && _f !== void 0 ? _f : undefined;
        message.textData = (_g = object.textData) !== null && _g !== void 0 ? _g : undefined;
        message.protoData =
            object.protoData !== undefined && object.protoData !== null
                ? any_1.Any.fromPartial(object.protoData)
                : undefined;
        return message;
    },
};
function createBaseCloudEvent_AttributesEntry() {
    return { key: "", value: undefined };
}
exports.CloudEvent_AttributesEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.key !== "") {
            writer.uint32(10).string(message.key);
        }
        if (message.value !== undefined) {
            exports.CloudEventAttributeValue.encode(message.value, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCloudEvent_AttributesEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.key = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.value = exports.CloudEventAttributeValue.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            key: isSet(object.key) ? globalThis.String(object.key) : "",
            value: isSet(object.value)
                ? exports.CloudEventAttributeValue.fromJSON(object.value)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.key !== "") {
            obj.key = message.key;
        }
        if (message.value !== undefined) {
            obj.value = exports.CloudEventAttributeValue.toJSON(message.value);
        }
        return obj;
    },
    create: function (base) {
        return exports.CloudEvent_AttributesEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseCloudEvent_AttributesEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : "";
        message.value =
            object.value !== undefined && object.value !== null
                ? exports.CloudEventAttributeValue.fromPartial(object.value)
                : undefined;
        return message;
    },
};
function createBaseCloudEventAttributeValue() {
    return {
        ceBoolean: undefined,
        ceInteger: undefined,
        ceString: undefined,
        ceBytes: undefined,
        ceUri: undefined,
        ceUriRef: undefined,
        ceTimestamp: undefined,
    };
}
exports.CloudEventAttributeValue = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.ceBoolean !== undefined) {
            writer.uint32(8).bool(message.ceBoolean);
        }
        if (message.ceInteger !== undefined) {
            writer.uint32(16).int32(message.ceInteger);
        }
        if (message.ceString !== undefined) {
            writer.uint32(26).string(message.ceString);
        }
        if (message.ceBytes !== undefined) {
            writer.uint32(34).bytes(message.ceBytes);
        }
        if (message.ceUri !== undefined) {
            writer.uint32(42).string(message.ceUri);
        }
        if (message.ceUriRef !== undefined) {
            writer.uint32(50).string(message.ceUriRef);
        }
        if (message.ceTimestamp !== undefined) {
            timestamp_1.Timestamp.encode(toTimestamp(message.ceTimestamp), writer.uint32(58).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCloudEventAttributeValue();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.ceBoolean = reader.bool();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.ceInteger = reader.int32();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.ceString = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.ceBytes = reader.bytes();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.ceUri = reader.string();
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.ceUriRef = reader.string();
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.ceTimestamp = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            ceBoolean: isSet(object.ceBoolean)
                ? globalThis.Boolean(object.ceBoolean)
                : undefined,
            ceInteger: isSet(object.ceInteger)
                ? globalThis.Number(object.ceInteger)
                : undefined,
            ceString: isSet(object.ceString)
                ? globalThis.String(object.ceString)
                : undefined,
            ceBytes: isSet(object.ceBytes)
                ? Buffer.from(bytesFromBase64(object.ceBytes))
                : undefined,
            ceUri: isSet(object.ceUri)
                ? globalThis.String(object.ceUri)
                : undefined,
            ceUriRef: isSet(object.ceUriRef)
                ? globalThis.String(object.ceUriRef)
                : undefined,
            ceTimestamp: isSet(object.ceTimestamp)
                ? fromJsonTimestamp(object.ceTimestamp)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.ceBoolean !== undefined) {
            obj.ceBoolean = message.ceBoolean;
        }
        if (message.ceInteger !== undefined) {
            obj.ceInteger = Math.round(message.ceInteger);
        }
        if (message.ceString !== undefined) {
            obj.ceString = message.ceString;
        }
        if (message.ceBytes !== undefined) {
            obj.ceBytes = base64FromBytes(message.ceBytes);
        }
        if (message.ceUri !== undefined) {
            obj.ceUri = message.ceUri;
        }
        if (message.ceUriRef !== undefined) {
            obj.ceUriRef = message.ceUriRef;
        }
        if (message.ceTimestamp !== undefined) {
            obj.ceTimestamp = message.ceTimestamp.toISOString();
        }
        return obj;
    },
    create: function (base) {
        return exports.CloudEventAttributeValue.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g;
        var message = createBaseCloudEventAttributeValue();
        message.ceBoolean = (_a = object.ceBoolean) !== null && _a !== void 0 ? _a : undefined;
        message.ceInteger = (_b = object.ceInteger) !== null && _b !== void 0 ? _b : undefined;
        message.ceString = (_c = object.ceString) !== null && _c !== void 0 ? _c : undefined;
        message.ceBytes = (_d = object.ceBytes) !== null && _d !== void 0 ? _d : undefined;
        message.ceUri = (_e = object.ceUri) !== null && _e !== void 0 ? _e : undefined;
        message.ceUriRef = (_f = object.ceUriRef) !== null && _f !== void 0 ? _f : undefined;
        message.ceTimestamp = (_g = object.ceTimestamp) !== null && _g !== void 0 ? _g : undefined;
        return message;
    },
};
function createBasePublishRequest() {
    return { event: undefined };
}
exports.PublishRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.event !== undefined) {
            exports.CloudEvent.encode(message.event, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBasePublishRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.event = exports.CloudEvent.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            event: isSet(object.event)
                ? exports.CloudEvent.fromJSON(object.event)
                : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.event !== undefined) {
            obj.event = exports.CloudEvent.toJSON(message.event);
        }
        return obj;
    },
    create: function (base) {
        return exports.PublishRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBasePublishRequest();
        message.event =
            object.event !== undefined && object.event !== null
                ? exports.CloudEvent.fromPartial(object.event)
                : undefined;
        return message;
    },
};
function createBaseSubscriptionRequest() {
    return { source: "" };
}
exports.SubscriptionRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = _m0.Writer.create(); }
        if (message.source !== "") {
            writer.uint32(10).string(message.source);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSubscriptionRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.source = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            source: isSet(object.source)
                ? globalThis.String(object.source)
                : "",
        };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.source !== "") {
            obj.source = message.source;
        }
        return obj;
    },
    create: function (base) {
        return exports.SubscriptionRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseSubscriptionRequest();
        message.source = (_a = object.source) !== null && _a !== void 0 ? _a : "";
        return message;
    },
};
exports.CloudEventServiceService = {
    publish: {
        path: "/io.cloudevents.v1.CloudEventService/Publish",
        requestStream: false,
        responseStream: false,
        requestSerialize: function (value) {
            return Buffer.from(exports.PublishRequest.encode(value).finish());
        },
        requestDeserialize: function (value) { return exports.PublishRequest.decode(value); },
        responseSerialize: function (value) {
            return Buffer.from(empty_1.Empty.encode(value).finish());
        },
        responseDeserialize: function (value) { return empty_1.Empty.decode(value); },
    },
    subscribe: {
        path: "/io.cloudevents.v1.CloudEventService/Subscribe",
        requestStream: false,
        responseStream: true,
        requestSerialize: function (value) {
            return Buffer.from(exports.SubscriptionRequest.encode(value).finish());
        },
        requestDeserialize: function (value) {
            return exports.SubscriptionRequest.decode(value);
        },
        responseSerialize: function (value) {
            return Buffer.from(exports.CloudEvent.encode(value).finish());
        },
        responseDeserialize: function (value) { return exports.CloudEvent.decode(value); },
    },
};
exports.CloudEventServiceClient = (0, grpc_js_1.makeGenericClientConstructor)(exports.CloudEventServiceService, "io.cloudevents.v1.CloudEventService");
function bytesFromBase64(b64) {
    return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
}
function base64FromBytes(arr) {
    return globalThis.Buffer.from(arr).toString("base64");
}
function toTimestamp(date) {
    var seconds = numberToLong(Math.trunc(date.getTime() / 1000));
    var nanos = (date.getTime() % 1000) * 1000000;
    return { seconds: seconds, nanos: nanos };
}
function fromTimestamp(t) {
    var millis = (t.seconds.toNumber() || 0) * 1000;
    millis += (t.nanos || 0) / 1000000;
    return new globalThis.Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof globalThis.Date) {
        return o;
    }
    else if (typeof o === "string") {
        return new globalThis.Date(o);
    }
    else {
        return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));
    }
}
function numberToLong(number) {
    return Long.fromNumber(number);
}
if (_m0.util.Long !== Long) {
    _m0.util.Long = Long;
    _m0.configure();
}
function isObject(value) {
    return typeof value === "object" && value !== null;
}
function isSet(value) {
    return value !== null && value !== undefined;
}
