// source: assets/proto/vacancy.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.vacancy.CreateVacancyRequest', null, global);
goog.exportSymbol('proto.vacancy.Direction', null, global);
goog.exportSymbol('proto.vacancy.GetVacanciesByParamsRequest', null, global);
goog.exportSymbol('proto.vacancy.GetVacanciesResponse', null, global);
goog.exportSymbol('proto.vacancy.GetVacancyByIdRequest', null, global);
goog.exportSymbol('proto.vacancy.Skill', null, global);
goog.exportSymbol('proto.vacancy.UpdateVacancyRequest', null, global);
goog.exportSymbol('proto.vacancy.Vacancy', null, global);
goog.exportSymbol('proto.vacancy.VacancyCreated', null, global);
goog.exportSymbol('proto.vacancy.VacancyResponse', null, global);
goog.exportSymbol('proto.vacancy.VacancyUpdated', null, global);
goog.exportSymbol('proto.vacancy.VacancyWithId', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vacancy.Vacancy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vacancy.Vacancy.repeatedFields_, null);
};
goog.inherits(proto.vacancy.Vacancy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vacancy.Vacancy.displayName = 'proto.vacancy.Vacancy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vacancy.Skill = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vacancy.Skill, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vacancy.Skill.displayName = 'proto.vacancy.Skill';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vacancy.Direction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vacancy.Direction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vacancy.Direction.displayName = 'proto.vacancy.Direction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vacancy.CreateVacancyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vacancy.CreateVacancyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vacancy.CreateVacancyRequest.displayName = 'proto.vacancy.CreateVacancyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vacancy.UpdateVacancyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vacancy.UpdateVacancyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vacancy.UpdateVacancyRequest.displayName = 'proto.vacancy.UpdateVacancyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vacancy.VacancyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vacancy.VacancyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vacancy.VacancyResponse.displayName = 'proto.vacancy.VacancyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vacancy.VacancyCreated = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vacancy.VacancyCreated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vacancy.VacancyCreated.displayName = 'proto.vacancy.VacancyCreated';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vacancy.VacancyUpdated = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vacancy.VacancyUpdated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vacancy.VacancyUpdated.displayName = 'proto.vacancy.VacancyUpdated';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vacancy.GetVacancyByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vacancy.GetVacancyByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vacancy.GetVacancyByIdRequest.displayName = 'proto.vacancy.GetVacancyByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vacancy.GetVacanciesByParamsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vacancy.GetVacanciesByParamsRequest.repeatedFields_, null);
};
goog.inherits(proto.vacancy.GetVacanciesByParamsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vacancy.GetVacanciesByParamsRequest.displayName = 'proto.vacancy.GetVacanciesByParamsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vacancy.GetVacanciesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vacancy.GetVacanciesResponse.repeatedFields_, null);
};
goog.inherits(proto.vacancy.GetVacanciesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vacancy.GetVacanciesResponse.displayName = 'proto.vacancy.GetVacanciesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vacancy.VacancyWithId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vacancy.VacancyWithId.repeatedFields_, null);
};
goog.inherits(proto.vacancy.VacancyWithId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vacancy.VacancyWithId.displayName = 'proto.vacancy.VacancyWithId';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vacancy.Vacancy.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vacancy.Vacancy.prototype.toObject = function(opt_includeInstance) {
  return proto.vacancy.Vacancy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vacancy.Vacancy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.Vacancy.toObject = function(includeInstance, msg) {
  var f, obj = {
    expectedSkillsList: jspb.Message.toObjectList(msg.getExpectedSkillsList(),
    proto.vacancy.Skill.toObject, includeInstance),
    aboutPractice: jspb.Message.getFieldWithDefault(msg, 2, ""),
    directionsList: jspb.Message.toObjectList(msg.getDirectionsList(),
    proto.vacancy.Direction.toObject, includeInstance),
    aboutProjects: jspb.Message.getFieldWithDefault(msg, 4, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vacancy.Vacancy}
 */
proto.vacancy.Vacancy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vacancy.Vacancy;
  return proto.vacancy.Vacancy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vacancy.Vacancy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vacancy.Vacancy}
 */
proto.vacancy.Vacancy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.vacancy.Skill;
      reader.readMessage(value,proto.vacancy.Skill.deserializeBinaryFromReader);
      msg.addExpectedSkills(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAboutPractice(value);
      break;
    case 3:
      var value = new proto.vacancy.Direction;
      reader.readMessage(value,proto.vacancy.Direction.deserializeBinaryFromReader);
      msg.addDirections(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAboutProjects(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vacancy.Vacancy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vacancy.Vacancy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vacancy.Vacancy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.Vacancy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExpectedSkillsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.vacancy.Skill.serializeBinaryToWriter
    );
  }
  f = message.getAboutPractice();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDirectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.vacancy.Direction.serializeBinaryToWriter
    );
  }
  f = message.getAboutProjects();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * repeated Skill expected_skills = 1;
 * @return {!Array<!proto.vacancy.Skill>}
 */
proto.vacancy.Vacancy.prototype.getExpectedSkillsList = function() {
  return /** @type{!Array<!proto.vacancy.Skill>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.vacancy.Skill, 1));
};


/**
 * @param {!Array<!proto.vacancy.Skill>} value
 * @return {!proto.vacancy.Vacancy} returns this
*/
proto.vacancy.Vacancy.prototype.setExpectedSkillsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vacancy.Skill=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vacancy.Skill}
 */
proto.vacancy.Vacancy.prototype.addExpectedSkills = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vacancy.Skill, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vacancy.Vacancy} returns this
 */
proto.vacancy.Vacancy.prototype.clearExpectedSkillsList = function() {
  return this.setExpectedSkillsList([]);
};


/**
 * optional string about_practice = 2;
 * @return {string}
 */
proto.vacancy.Vacancy.prototype.getAboutPractice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.Vacancy} returns this
 */
proto.vacancy.Vacancy.prototype.setAboutPractice = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Direction directions = 3;
 * @return {!Array<!proto.vacancy.Direction>}
 */
proto.vacancy.Vacancy.prototype.getDirectionsList = function() {
  return /** @type{!Array<!proto.vacancy.Direction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.vacancy.Direction, 3));
};


/**
 * @param {!Array<!proto.vacancy.Direction>} value
 * @return {!proto.vacancy.Vacancy} returns this
*/
proto.vacancy.Vacancy.prototype.setDirectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.vacancy.Direction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vacancy.Direction}
 */
proto.vacancy.Vacancy.prototype.addDirections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.vacancy.Direction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vacancy.Vacancy} returns this
 */
proto.vacancy.Vacancy.prototype.clearDirectionsList = function() {
  return this.setDirectionsList([]);
};


/**
 * optional string about_projects = 4;
 * @return {string}
 */
proto.vacancy.Vacancy.prototype.getAboutProjects = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.Vacancy} returns this
 */
proto.vacancy.Vacancy.prototype.setAboutProjects = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string company_id = 5;
 * @return {string}
 */
proto.vacancy.Vacancy.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.Vacancy} returns this
 */
proto.vacancy.Vacancy.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vacancy.Skill.prototype.toObject = function(opt_includeInstance) {
  return proto.vacancy.Skill.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vacancy.Skill} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.Skill.toObject = function(includeInstance, msg) {
  var f, obj = {
    skill: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vacancy.Skill}
 */
proto.vacancy.Skill.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vacancy.Skill;
  return proto.vacancy.Skill.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vacancy.Skill} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vacancy.Skill}
 */
proto.vacancy.Skill.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSkill(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vacancy.Skill.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vacancy.Skill.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vacancy.Skill} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.Skill.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSkill();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string skill = 1;
 * @return {string}
 */
proto.vacancy.Skill.prototype.getSkill = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.Skill} returns this
 */
proto.vacancy.Skill.prototype.setSkill = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vacancy.Direction.prototype.toObject = function(opt_includeInstance) {
  return proto.vacancy.Direction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vacancy.Direction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.Direction.toObject = function(includeInstance, msg) {
  var f, obj = {
    direction: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vacancy.Direction}
 */
proto.vacancy.Direction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vacancy.Direction;
  return proto.vacancy.Direction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vacancy.Direction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vacancy.Direction}
 */
proto.vacancy.Direction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vacancy.Direction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vacancy.Direction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vacancy.Direction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.Direction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirection();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string direction = 1;
 * @return {string}
 */
proto.vacancy.Direction.prototype.getDirection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.Direction} returns this
 */
proto.vacancy.Direction.prototype.setDirection = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vacancy.CreateVacancyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.vacancy.CreateVacancyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vacancy.CreateVacancyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.CreateVacancyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    vacancy: (f = msg.getVacancy()) && proto.vacancy.Vacancy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vacancy.CreateVacancyRequest}
 */
proto.vacancy.CreateVacancyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vacancy.CreateVacancyRequest;
  return proto.vacancy.CreateVacancyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vacancy.CreateVacancyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vacancy.CreateVacancyRequest}
 */
proto.vacancy.CreateVacancyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.vacancy.Vacancy;
      reader.readMessage(value,proto.vacancy.Vacancy.deserializeBinaryFromReader);
      msg.setVacancy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vacancy.CreateVacancyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vacancy.CreateVacancyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vacancy.CreateVacancyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.CreateVacancyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVacancy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.vacancy.Vacancy.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vacancy vacancy = 1;
 * @return {?proto.vacancy.Vacancy}
 */
proto.vacancy.CreateVacancyRequest.prototype.getVacancy = function() {
  return /** @type{?proto.vacancy.Vacancy} */ (
    jspb.Message.getWrapperField(this, proto.vacancy.Vacancy, 1));
};


/**
 * @param {?proto.vacancy.Vacancy|undefined} value
 * @return {!proto.vacancy.CreateVacancyRequest} returns this
*/
proto.vacancy.CreateVacancyRequest.prototype.setVacancy = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vacancy.CreateVacancyRequest} returns this
 */
proto.vacancy.CreateVacancyRequest.prototype.clearVacancy = function() {
  return this.setVacancy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vacancy.CreateVacancyRequest.prototype.hasVacancy = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vacancy.UpdateVacancyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.vacancy.UpdateVacancyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vacancy.UpdateVacancyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.UpdateVacancyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vacancy: (f = msg.getVacancy()) && proto.vacancy.Vacancy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vacancy.UpdateVacancyRequest}
 */
proto.vacancy.UpdateVacancyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vacancy.UpdateVacancyRequest;
  return proto.vacancy.UpdateVacancyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vacancy.UpdateVacancyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vacancy.UpdateVacancyRequest}
 */
proto.vacancy.UpdateVacancyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.vacancy.Vacancy;
      reader.readMessage(value,proto.vacancy.Vacancy.deserializeBinaryFromReader);
      msg.setVacancy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vacancy.UpdateVacancyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vacancy.UpdateVacancyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vacancy.UpdateVacancyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.UpdateVacancyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVacancy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.vacancy.Vacancy.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.vacancy.UpdateVacancyRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.UpdateVacancyRequest} returns this
 */
proto.vacancy.UpdateVacancyRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Vacancy vacancy = 2;
 * @return {?proto.vacancy.Vacancy}
 */
proto.vacancy.UpdateVacancyRequest.prototype.getVacancy = function() {
  return /** @type{?proto.vacancy.Vacancy} */ (
    jspb.Message.getWrapperField(this, proto.vacancy.Vacancy, 2));
};


/**
 * @param {?proto.vacancy.Vacancy|undefined} value
 * @return {!proto.vacancy.UpdateVacancyRequest} returns this
*/
proto.vacancy.UpdateVacancyRequest.prototype.setVacancy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vacancy.UpdateVacancyRequest} returns this
 */
proto.vacancy.UpdateVacancyRequest.prototype.clearVacancy = function() {
  return this.setVacancy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vacancy.UpdateVacancyRequest.prototype.hasVacancy = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vacancy.VacancyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.vacancy.VacancyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vacancy.VacancyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.VacancyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vacancy: (f = msg.getVacancy()) && proto.vacancy.Vacancy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vacancy.VacancyResponse}
 */
proto.vacancy.VacancyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vacancy.VacancyResponse;
  return proto.vacancy.VacancyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vacancy.VacancyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vacancy.VacancyResponse}
 */
proto.vacancy.VacancyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.vacancy.Vacancy;
      reader.readMessage(value,proto.vacancy.Vacancy.deserializeBinaryFromReader);
      msg.setVacancy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vacancy.VacancyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vacancy.VacancyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vacancy.VacancyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.VacancyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVacancy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.vacancy.Vacancy.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.vacancy.VacancyResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.VacancyResponse} returns this
 */
proto.vacancy.VacancyResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Vacancy vacancy = 2;
 * @return {?proto.vacancy.Vacancy}
 */
proto.vacancy.VacancyResponse.prototype.getVacancy = function() {
  return /** @type{?proto.vacancy.Vacancy} */ (
    jspb.Message.getWrapperField(this, proto.vacancy.Vacancy, 2));
};


/**
 * @param {?proto.vacancy.Vacancy|undefined} value
 * @return {!proto.vacancy.VacancyResponse} returns this
*/
proto.vacancy.VacancyResponse.prototype.setVacancy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vacancy.VacancyResponse} returns this
 */
proto.vacancy.VacancyResponse.prototype.clearVacancy = function() {
  return this.setVacancy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vacancy.VacancyResponse.prototype.hasVacancy = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vacancy.VacancyCreated.prototype.toObject = function(opt_includeInstance) {
  return proto.vacancy.VacancyCreated.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vacancy.VacancyCreated} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.VacancyCreated.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vacancy: (f = msg.getVacancy()) && proto.vacancy.Vacancy.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vacancy.VacancyCreated}
 */
proto.vacancy.VacancyCreated.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vacancy.VacancyCreated;
  return proto.vacancy.VacancyCreated.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vacancy.VacancyCreated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vacancy.VacancyCreated}
 */
proto.vacancy.VacancyCreated.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.vacancy.Vacancy;
      reader.readMessage(value,proto.vacancy.Vacancy.deserializeBinaryFromReader);
      msg.setVacancy(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vacancy.VacancyCreated.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vacancy.VacancyCreated.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vacancy.VacancyCreated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.VacancyCreated.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVacancy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.vacancy.Vacancy.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.vacancy.VacancyCreated.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.VacancyCreated} returns this
 */
proto.vacancy.VacancyCreated.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Vacancy vacancy = 2;
 * @return {?proto.vacancy.Vacancy}
 */
proto.vacancy.VacancyCreated.prototype.getVacancy = function() {
  return /** @type{?proto.vacancy.Vacancy} */ (
    jspb.Message.getWrapperField(this, proto.vacancy.Vacancy, 2));
};


/**
 * @param {?proto.vacancy.Vacancy|undefined} value
 * @return {!proto.vacancy.VacancyCreated} returns this
*/
proto.vacancy.VacancyCreated.prototype.setVacancy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vacancy.VacancyCreated} returns this
 */
proto.vacancy.VacancyCreated.prototype.clearVacancy = function() {
  return this.setVacancy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vacancy.VacancyCreated.prototype.hasVacancy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.vacancy.VacancyCreated.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.vacancy.VacancyCreated} returns this
*/
proto.vacancy.VacancyCreated.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vacancy.VacancyCreated} returns this
 */
proto.vacancy.VacancyCreated.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vacancy.VacancyCreated.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vacancy.VacancyUpdated.prototype.toObject = function(opt_includeInstance) {
  return proto.vacancy.VacancyUpdated.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vacancy.VacancyUpdated} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.VacancyUpdated.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vacancy: (f = msg.getVacancy()) && proto.vacancy.Vacancy.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vacancy.VacancyUpdated}
 */
proto.vacancy.VacancyUpdated.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vacancy.VacancyUpdated;
  return proto.vacancy.VacancyUpdated.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vacancy.VacancyUpdated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vacancy.VacancyUpdated}
 */
proto.vacancy.VacancyUpdated.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.vacancy.Vacancy;
      reader.readMessage(value,proto.vacancy.Vacancy.deserializeBinaryFromReader);
      msg.setVacancy(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vacancy.VacancyUpdated.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vacancy.VacancyUpdated.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vacancy.VacancyUpdated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.VacancyUpdated.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVacancy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.vacancy.Vacancy.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.vacancy.VacancyUpdated.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.VacancyUpdated} returns this
 */
proto.vacancy.VacancyUpdated.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Vacancy vacancy = 2;
 * @return {?proto.vacancy.Vacancy}
 */
proto.vacancy.VacancyUpdated.prototype.getVacancy = function() {
  return /** @type{?proto.vacancy.Vacancy} */ (
    jspb.Message.getWrapperField(this, proto.vacancy.Vacancy, 2));
};


/**
 * @param {?proto.vacancy.Vacancy|undefined} value
 * @return {!proto.vacancy.VacancyUpdated} returns this
*/
proto.vacancy.VacancyUpdated.prototype.setVacancy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vacancy.VacancyUpdated} returns this
 */
proto.vacancy.VacancyUpdated.prototype.clearVacancy = function() {
  return this.setVacancy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vacancy.VacancyUpdated.prototype.hasVacancy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.vacancy.VacancyUpdated.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.vacancy.VacancyUpdated} returns this
*/
proto.vacancy.VacancyUpdated.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vacancy.VacancyUpdated} returns this
 */
proto.vacancy.VacancyUpdated.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vacancy.VacancyUpdated.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vacancy.GetVacancyByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.vacancy.GetVacancyByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vacancy.GetVacancyByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.GetVacancyByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vacancy.GetVacancyByIdRequest}
 */
proto.vacancy.GetVacancyByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vacancy.GetVacancyByIdRequest;
  return proto.vacancy.GetVacancyByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vacancy.GetVacancyByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vacancy.GetVacancyByIdRequest}
 */
proto.vacancy.GetVacancyByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vacancy.GetVacancyByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vacancy.GetVacancyByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vacancy.GetVacancyByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.GetVacancyByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.vacancy.GetVacancyByIdRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.GetVacancyByIdRequest} returns this
 */
proto.vacancy.GetVacancyByIdRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vacancy.GetVacanciesByParamsRequest.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vacancy.GetVacanciesByParamsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.vacancy.GetVacanciesByParamsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vacancy.GetVacanciesByParamsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.GetVacanciesByParamsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    expectedSkillsList: jspb.Message.toObjectList(msg.getExpectedSkillsList(),
    proto.vacancy.Skill.toObject, includeInstance),
    aboutPractice: jspb.Message.getFieldWithDefault(msg, 2, ""),
    directionsList: jspb.Message.toObjectList(msg.getDirectionsList(),
    proto.vacancy.Direction.toObject, includeInstance),
    companyId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vacancy.GetVacanciesByParamsRequest}
 */
proto.vacancy.GetVacanciesByParamsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vacancy.GetVacanciesByParamsRequest;
  return proto.vacancy.GetVacanciesByParamsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vacancy.GetVacanciesByParamsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vacancy.GetVacanciesByParamsRequest}
 */
proto.vacancy.GetVacanciesByParamsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.vacancy.Skill;
      reader.readMessage(value,proto.vacancy.Skill.deserializeBinaryFromReader);
      msg.addExpectedSkills(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAboutPractice(value);
      break;
    case 3:
      var value = new proto.vacancy.Direction;
      reader.readMessage(value,proto.vacancy.Direction.deserializeBinaryFromReader);
      msg.addDirections(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vacancy.GetVacanciesByParamsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vacancy.GetVacanciesByParamsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vacancy.GetVacanciesByParamsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.GetVacanciesByParamsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExpectedSkillsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.vacancy.Skill.serializeBinaryToWriter
    );
  }
  f = message.getAboutPractice();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDirectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.vacancy.Direction.serializeBinaryToWriter
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated Skill expected_skills = 1;
 * @return {!Array<!proto.vacancy.Skill>}
 */
proto.vacancy.GetVacanciesByParamsRequest.prototype.getExpectedSkillsList = function() {
  return /** @type{!Array<!proto.vacancy.Skill>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.vacancy.Skill, 1));
};


/**
 * @param {!Array<!proto.vacancy.Skill>} value
 * @return {!proto.vacancy.GetVacanciesByParamsRequest} returns this
*/
proto.vacancy.GetVacanciesByParamsRequest.prototype.setExpectedSkillsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vacancy.Skill=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vacancy.Skill}
 */
proto.vacancy.GetVacanciesByParamsRequest.prototype.addExpectedSkills = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vacancy.Skill, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vacancy.GetVacanciesByParamsRequest} returns this
 */
proto.vacancy.GetVacanciesByParamsRequest.prototype.clearExpectedSkillsList = function() {
  return this.setExpectedSkillsList([]);
};


/**
 * optional string about_practice = 2;
 * @return {string}
 */
proto.vacancy.GetVacanciesByParamsRequest.prototype.getAboutPractice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.GetVacanciesByParamsRequest} returns this
 */
proto.vacancy.GetVacanciesByParamsRequest.prototype.setAboutPractice = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Direction directions = 3;
 * @return {!Array<!proto.vacancy.Direction>}
 */
proto.vacancy.GetVacanciesByParamsRequest.prototype.getDirectionsList = function() {
  return /** @type{!Array<!proto.vacancy.Direction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.vacancy.Direction, 3));
};


/**
 * @param {!Array<!proto.vacancy.Direction>} value
 * @return {!proto.vacancy.GetVacanciesByParamsRequest} returns this
*/
proto.vacancy.GetVacanciesByParamsRequest.prototype.setDirectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.vacancy.Direction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vacancy.Direction}
 */
proto.vacancy.GetVacanciesByParamsRequest.prototype.addDirections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.vacancy.Direction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vacancy.GetVacanciesByParamsRequest} returns this
 */
proto.vacancy.GetVacanciesByParamsRequest.prototype.clearDirectionsList = function() {
  return this.setDirectionsList([]);
};


/**
 * optional string company_id = 4;
 * @return {string}
 */
proto.vacancy.GetVacanciesByParamsRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.GetVacanciesByParamsRequest} returns this
 */
proto.vacancy.GetVacanciesByParamsRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vacancy.GetVacanciesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vacancy.GetVacanciesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.vacancy.GetVacanciesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vacancy.GetVacanciesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.GetVacanciesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    vacanciesList: jspb.Message.toObjectList(msg.getVacanciesList(),
    proto.vacancy.VacancyWithId.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vacancy.GetVacanciesResponse}
 */
proto.vacancy.GetVacanciesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vacancy.GetVacanciesResponse;
  return proto.vacancy.GetVacanciesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vacancy.GetVacanciesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vacancy.GetVacanciesResponse}
 */
proto.vacancy.GetVacanciesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.vacancy.VacancyWithId;
      reader.readMessage(value,proto.vacancy.VacancyWithId.deserializeBinaryFromReader);
      msg.addVacancies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vacancy.GetVacanciesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vacancy.GetVacanciesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vacancy.GetVacanciesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.GetVacanciesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVacanciesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.vacancy.VacancyWithId.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VacancyWithId vacancies = 1;
 * @return {!Array<!proto.vacancy.VacancyWithId>}
 */
proto.vacancy.GetVacanciesResponse.prototype.getVacanciesList = function() {
  return /** @type{!Array<!proto.vacancy.VacancyWithId>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.vacancy.VacancyWithId, 1));
};


/**
 * @param {!Array<!proto.vacancy.VacancyWithId>} value
 * @return {!proto.vacancy.GetVacanciesResponse} returns this
*/
proto.vacancy.GetVacanciesResponse.prototype.setVacanciesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vacancy.VacancyWithId=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vacancy.VacancyWithId}
 */
proto.vacancy.GetVacanciesResponse.prototype.addVacancies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vacancy.VacancyWithId, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vacancy.GetVacanciesResponse} returns this
 */
proto.vacancy.GetVacanciesResponse.prototype.clearVacanciesList = function() {
  return this.setVacanciesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vacancy.VacancyWithId.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vacancy.VacancyWithId.prototype.toObject = function(opt_includeInstance) {
  return proto.vacancy.VacancyWithId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vacancy.VacancyWithId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.VacancyWithId.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    expectedSkillsList: jspb.Message.toObjectList(msg.getExpectedSkillsList(),
    proto.vacancy.Skill.toObject, includeInstance),
    aboutPractice: jspb.Message.getFieldWithDefault(msg, 3, ""),
    directionsList: jspb.Message.toObjectList(msg.getDirectionsList(),
    proto.vacancy.Direction.toObject, includeInstance),
    aboutProjects: jspb.Message.getFieldWithDefault(msg, 5, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vacancy.VacancyWithId}
 */
proto.vacancy.VacancyWithId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vacancy.VacancyWithId;
  return proto.vacancy.VacancyWithId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vacancy.VacancyWithId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vacancy.VacancyWithId}
 */
proto.vacancy.VacancyWithId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.vacancy.Skill;
      reader.readMessage(value,proto.vacancy.Skill.deserializeBinaryFromReader);
      msg.addExpectedSkills(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAboutPractice(value);
      break;
    case 4:
      var value = new proto.vacancy.Direction;
      reader.readMessage(value,proto.vacancy.Direction.deserializeBinaryFromReader);
      msg.addDirections(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAboutProjects(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vacancy.VacancyWithId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vacancy.VacancyWithId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vacancy.VacancyWithId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vacancy.VacancyWithId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExpectedSkillsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.vacancy.Skill.serializeBinaryToWriter
    );
  }
  f = message.getAboutPractice();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDirectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.vacancy.Direction.serializeBinaryToWriter
    );
  }
  f = message.getAboutProjects();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.vacancy.VacancyWithId.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.VacancyWithId} returns this
 */
proto.vacancy.VacancyWithId.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Skill expected_skills = 2;
 * @return {!Array<!proto.vacancy.Skill>}
 */
proto.vacancy.VacancyWithId.prototype.getExpectedSkillsList = function() {
  return /** @type{!Array<!proto.vacancy.Skill>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.vacancy.Skill, 2));
};


/**
 * @param {!Array<!proto.vacancy.Skill>} value
 * @return {!proto.vacancy.VacancyWithId} returns this
*/
proto.vacancy.VacancyWithId.prototype.setExpectedSkillsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.vacancy.Skill=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vacancy.Skill}
 */
proto.vacancy.VacancyWithId.prototype.addExpectedSkills = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.vacancy.Skill, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vacancy.VacancyWithId} returns this
 */
proto.vacancy.VacancyWithId.prototype.clearExpectedSkillsList = function() {
  return this.setExpectedSkillsList([]);
};


/**
 * optional string about_practice = 3;
 * @return {string}
 */
proto.vacancy.VacancyWithId.prototype.getAboutPractice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.VacancyWithId} returns this
 */
proto.vacancy.VacancyWithId.prototype.setAboutPractice = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Direction directions = 4;
 * @return {!Array<!proto.vacancy.Direction>}
 */
proto.vacancy.VacancyWithId.prototype.getDirectionsList = function() {
  return /** @type{!Array<!proto.vacancy.Direction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.vacancy.Direction, 4));
};


/**
 * @param {!Array<!proto.vacancy.Direction>} value
 * @return {!proto.vacancy.VacancyWithId} returns this
*/
proto.vacancy.VacancyWithId.prototype.setDirectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.vacancy.Direction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vacancy.Direction}
 */
proto.vacancy.VacancyWithId.prototype.addDirections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.vacancy.Direction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vacancy.VacancyWithId} returns this
 */
proto.vacancy.VacancyWithId.prototype.clearDirectionsList = function() {
  return this.setDirectionsList([]);
};


/**
 * optional string about_projects = 5;
 * @return {string}
 */
proto.vacancy.VacancyWithId.prototype.getAboutProjects = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.VacancyWithId} returns this
 */
proto.vacancy.VacancyWithId.prototype.setAboutProjects = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string company_id = 6;
 * @return {string}
 */
proto.vacancy.VacancyWithId.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.vacancy.VacancyWithId} returns this
 */
proto.vacancy.VacancyWithId.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


goog.object.extend(exports, proto.vacancy);
