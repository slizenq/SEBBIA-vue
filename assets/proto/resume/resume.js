"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.4
//   protoc               v5.28.2
// source: assets/proto/resume/resume.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResumeServiceClientImpl = exports.ResumeServiceServiceName = exports.GetResumeByIdReq = exports.ChangeResumeReq = exports.ResumeResponse = exports.CreateResumeRes = exports.CreateResumeReq = exports.Resume = exports.Skill = exports.protobufPackage = void 0;
/* eslint-disable */
var wire_1 = require("@bufbuild/protobuf/wire");
var empty_js_1 = require("../../../google/protobuf/empty.js");
exports.protobufPackage = "resume";
function createBaseSkill() {
    return { skill: "" };
}
exports.Skill = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.skill !== "") {
            writer.uint32(10).string(message.skill);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSkill();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.skill = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return { skill: isSet(object.skill) ? globalThis.String(object.skill) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.skill !== "") {
            obj.skill = message.skill;
        }
        return obj;
    },
    create: function (base) {
        return exports.Skill.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseSkill();
        message.skill = (_a = object.skill) !== null && _a !== void 0 ? _a : "";
        return message;
    },
};
function createBaseResume() {
    return { resumeId: "", aboutMe: "", skills: [], direction: "", aboutProjects: "", portfolio: "" };
}
exports.Resume = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.resumeId !== "") {
            writer.uint32(10).string(message.resumeId);
        }
        if (message.aboutMe !== "") {
            writer.uint32(18).string(message.aboutMe);
        }
        for (var _i = 0, _a = message.skills; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.Skill.encode(v, writer.uint32(26).fork()).join();
        }
        if (message.direction !== "") {
            writer.uint32(34).string(message.direction);
        }
        if (message.aboutProjects !== "") {
            writer.uint32(42).string(message.aboutProjects);
        }
        if (message.portfolio !== "") {
            writer.uint32(50).string(message.portfolio);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseResume();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.resumeId = reader.string();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.aboutMe = reader.string();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.skills.push(exports.Skill.decode(reader, reader.uint32()));
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.direction = reader.string();
                    continue;
                }
                case 5: {
                    if (tag !== 42) {
                        break;
                    }
                    message.aboutProjects = reader.string();
                    continue;
                }
                case 6: {
                    if (tag !== 50) {
                        break;
                    }
                    message.portfolio = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            resumeId: isSet(object.resumeId) ? globalThis.String(object.resumeId) : "",
            aboutMe: isSet(object.aboutMe) ? globalThis.String(object.aboutMe) : "",
            skills: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.skills) ? object.skills.map(function (e) { return exports.Skill.fromJSON(e); }) : [],
            direction: isSet(object.direction) ? globalThis.String(object.direction) : "",
            aboutProjects: isSet(object.aboutProjects) ? globalThis.String(object.aboutProjects) : "",
            portfolio: isSet(object.portfolio) ? globalThis.String(object.portfolio) : "",
        };
    },
    toJSON: function (message) {
        var _a;
        var obj = {};
        if (message.resumeId !== "") {
            obj.resumeId = message.resumeId;
        }
        if (message.aboutMe !== "") {
            obj.aboutMe = message.aboutMe;
        }
        if ((_a = message.skills) === null || _a === void 0 ? void 0 : _a.length) {
            obj.skills = message.skills.map(function (e) { return exports.Skill.toJSON(e); });
        }
        if (message.direction !== "") {
            obj.direction = message.direction;
        }
        if (message.aboutProjects !== "") {
            obj.aboutProjects = message.aboutProjects;
        }
        if (message.portfolio !== "") {
            obj.portfolio = message.portfolio;
        }
        return obj;
    },
    create: function (base) {
        return exports.Resume.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f;
        var message = createBaseResume();
        message.resumeId = (_a = object.resumeId) !== null && _a !== void 0 ? _a : "";
        message.aboutMe = (_b = object.aboutMe) !== null && _b !== void 0 ? _b : "";
        message.skills = ((_c = object.skills) === null || _c === void 0 ? void 0 : _c.map(function (e) { return exports.Skill.fromPartial(e); })) || [];
        message.direction = (_d = object.direction) !== null && _d !== void 0 ? _d : "";
        message.aboutProjects = (_e = object.aboutProjects) !== null && _e !== void 0 ? _e : "";
        message.portfolio = (_f = object.portfolio) !== null && _f !== void 0 ? _f : "";
        return message;
    },
};
function createBaseCreateResumeReq() {
    return { aboutMe: "", skills: [], direction: "", aboutProjects: "", portfolio: "" };
}
exports.CreateResumeReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.aboutMe !== "") {
            writer.uint32(10).string(message.aboutMe);
        }
        for (var _i = 0, _a = message.skills; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.Skill.encode(v, writer.uint32(18).fork()).join();
        }
        if (message.direction !== "") {
            writer.uint32(26).string(message.direction);
        }
        if (message.aboutProjects !== "") {
            writer.uint32(34).string(message.aboutProjects);
        }
        if (message.portfolio !== "") {
            writer.uint32(42).string(message.portfolio);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCreateResumeReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.aboutMe = reader.string();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.skills.push(exports.Skill.decode(reader, reader.uint32()));
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.direction = reader.string();
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.aboutProjects = reader.string();
                    continue;
                }
                case 5: {
                    if (tag !== 42) {
                        break;
                    }
                    message.portfolio = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            aboutMe: isSet(object.aboutMe) ? globalThis.String(object.aboutMe) : "",
            skills: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.skills) ? object.skills.map(function (e) { return exports.Skill.fromJSON(e); }) : [],
            direction: isSet(object.direction) ? globalThis.String(object.direction) : "",
            aboutProjects: isSet(object.aboutProjects) ? globalThis.String(object.aboutProjects) : "",
            portfolio: isSet(object.portfolio) ? globalThis.String(object.portfolio) : "",
        };
    },
    toJSON: function (message) {
        var _a;
        var obj = {};
        if (message.aboutMe !== "") {
            obj.aboutMe = message.aboutMe;
        }
        if ((_a = message.skills) === null || _a === void 0 ? void 0 : _a.length) {
            obj.skills = message.skills.map(function (e) { return exports.Skill.toJSON(e); });
        }
        if (message.direction !== "") {
            obj.direction = message.direction;
        }
        if (message.aboutProjects !== "") {
            obj.aboutProjects = message.aboutProjects;
        }
        if (message.portfolio !== "") {
            obj.portfolio = message.portfolio;
        }
        return obj;
    },
    create: function (base) {
        return exports.CreateResumeReq.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseCreateResumeReq();
        message.aboutMe = (_a = object.aboutMe) !== null && _a !== void 0 ? _a : "";
        message.skills = ((_b = object.skills) === null || _b === void 0 ? void 0 : _b.map(function (e) { return exports.Skill.fromPartial(e); })) || [];
        message.direction = (_c = object.direction) !== null && _c !== void 0 ? _c : "";
        message.aboutProjects = (_d = object.aboutProjects) !== null && _d !== void 0 ? _d : "";
        message.portfolio = (_e = object.portfolio) !== null && _e !== void 0 ? _e : "";
        return message;
    },
};
function createBaseCreateResumeRes() {
    return { resume: undefined };
}
exports.CreateResumeRes = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.resume !== undefined) {
            exports.Resume.encode(message.resume, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCreateResumeRes();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.resume = exports.Resume.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return { resume: isSet(object.resume) ? exports.Resume.fromJSON(object.resume) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.resume !== undefined) {
            obj.resume = exports.Resume.toJSON(message.resume);
        }
        return obj;
    },
    create: function (base) {
        return exports.CreateResumeRes.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseCreateResumeRes();
        message.resume = (object.resume !== undefined && object.resume !== null)
            ? exports.Resume.fromPartial(object.resume)
            : undefined;
        return message;
    },
};
function createBaseResumeResponse() {
    return { resume: undefined };
}
exports.ResumeResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.resume !== undefined) {
            exports.Resume.encode(message.resume, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseResumeResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.resume = exports.Resume.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return { resume: isSet(object.resume) ? exports.Resume.fromJSON(object.resume) : undefined };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.resume !== undefined) {
            obj.resume = exports.Resume.toJSON(message.resume);
        }
        return obj;
    },
    create: function (base) {
        return exports.ResumeResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseResumeResponse();
        message.resume = (object.resume !== undefined && object.resume !== null)
            ? exports.Resume.fromPartial(object.resume)
            : undefined;
        return message;
    },
};
function createBaseChangeResumeReq() {
    return {
        resumeId: undefined,
        aboutMe: undefined,
        skills: [],
        direction: undefined,
        aboutProjects: undefined,
        portfolio: undefined,
    };
}
exports.ChangeResumeReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.resumeId !== undefined) {
            writer.uint32(10).string(message.resumeId);
        }
        if (message.aboutMe !== undefined) {
            writer.uint32(18).string(message.aboutMe);
        }
        for (var _i = 0, _a = message.skills; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.Skill.encode(v, writer.uint32(26).fork()).join();
        }
        if (message.direction !== undefined) {
            writer.uint32(34).string(message.direction);
        }
        if (message.aboutProjects !== undefined) {
            writer.uint32(42).string(message.aboutProjects);
        }
        if (message.portfolio !== undefined) {
            writer.uint32(50).string(message.portfolio);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseChangeResumeReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.resumeId = reader.string();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.aboutMe = reader.string();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.skills.push(exports.Skill.decode(reader, reader.uint32()));
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.direction = reader.string();
                    continue;
                }
                case 5: {
                    if (tag !== 42) {
                        break;
                    }
                    message.aboutProjects = reader.string();
                    continue;
                }
                case 6: {
                    if (tag !== 50) {
                        break;
                    }
                    message.portfolio = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            resumeId: isSet(object.resumeId) ? globalThis.String(object.resumeId) : undefined,
            aboutMe: isSet(object.aboutMe) ? globalThis.String(object.aboutMe) : undefined,
            skills: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.skills) ? object.skills.map(function (e) { return exports.Skill.fromJSON(e); }) : [],
            direction: isSet(object.direction) ? globalThis.String(object.direction) : undefined,
            aboutProjects: isSet(object.aboutProjects) ? globalThis.String(object.aboutProjects) : undefined,
            portfolio: isSet(object.portfolio) ? globalThis.String(object.portfolio) : undefined,
        };
    },
    toJSON: function (message) {
        var _a;
        var obj = {};
        if (message.resumeId !== undefined) {
            obj.resumeId = message.resumeId;
        }
        if (message.aboutMe !== undefined) {
            obj.aboutMe = message.aboutMe;
        }
        if ((_a = message.skills) === null || _a === void 0 ? void 0 : _a.length) {
            obj.skills = message.skills.map(function (e) { return exports.Skill.toJSON(e); });
        }
        if (message.direction !== undefined) {
            obj.direction = message.direction;
        }
        if (message.aboutProjects !== undefined) {
            obj.aboutProjects = message.aboutProjects;
        }
        if (message.portfolio !== undefined) {
            obj.portfolio = message.portfolio;
        }
        return obj;
    },
    create: function (base) {
        return exports.ChangeResumeReq.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f;
        var message = createBaseChangeResumeReq();
        message.resumeId = (_a = object.resumeId) !== null && _a !== void 0 ? _a : undefined;
        message.aboutMe = (_b = object.aboutMe) !== null && _b !== void 0 ? _b : undefined;
        message.skills = ((_c = object.skills) === null || _c === void 0 ? void 0 : _c.map(function (e) { return exports.Skill.fromPartial(e); })) || [];
        message.direction = (_d = object.direction) !== null && _d !== void 0 ? _d : undefined;
        message.aboutProjects = (_e = object.aboutProjects) !== null && _e !== void 0 ? _e : undefined;
        message.portfolio = (_f = object.portfolio) !== null && _f !== void 0 ? _f : undefined;
        return message;
    },
};
function createBaseGetResumeByIdReq() {
    return { resumeId: "" };
}
exports.GetResumeByIdReq = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.resumeId !== "") {
            writer.uint32(10).string(message.resumeId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetResumeByIdReq();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.resumeId = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON: function (object) {
        return { resumeId: isSet(object.resumeId) ? globalThis.String(object.resumeId) : "" };
    },
    toJSON: function (message) {
        var obj = {};
        if (message.resumeId !== "") {
            obj.resumeId = message.resumeId;
        }
        return obj;
    },
    create: function (base) {
        return exports.GetResumeByIdReq.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetResumeByIdReq();
        message.resumeId = (_a = object.resumeId) !== null && _a !== void 0 ? _a : "";
        return message;
    },
};
exports.ResumeServiceServiceName = "resume.ResumeService";
var ResumeServiceClientImpl = /** @class */ (function () {
    function ResumeServiceClientImpl(rpc, opts) {
        this.service = (opts === null || opts === void 0 ? void 0 : opts.service) || exports.ResumeServiceServiceName;
        this.rpc = rpc;
        this.CreateResume = this.CreateResume.bind(this);
        this.ChangeResume = this.ChangeResume.bind(this);
        this.GetResumeByAccountId = this.GetResumeByAccountId.bind(this);
        this.GetResumeById = this.GetResumeById.bind(this);
    }
    ResumeServiceClientImpl.prototype.CreateResume = function (request) {
        var data = exports.CreateResumeReq.encode(request).finish();
        var promise = this.rpc.request(this.service, "CreateResume", data);
        return promise.then(function (data) { return exports.ResumeResponse.decode(new wire_1.BinaryReader(data)); });
    };
    ResumeServiceClientImpl.prototype.ChangeResume = function (request) {
        var data = exports.ChangeResumeReq.encode(request).finish();
        var promise = this.rpc.request(this.service, "ChangeResume", data);
        return promise.then(function (data) { return exports.ResumeResponse.decode(new wire_1.BinaryReader(data)); });
    };
    ResumeServiceClientImpl.prototype.GetResumeByAccountId = function (request) {
        var data = empty_js_1.Empty.encode(request).finish();
        var promise = this.rpc.request(this.service, "GetResumeByAccountId", data);
        return promise.then(function (data) { return exports.ResumeResponse.decode(new wire_1.BinaryReader(data)); });
    };
    ResumeServiceClientImpl.prototype.GetResumeById = function (request) {
        var data = exports.GetResumeByIdReq.encode(request).finish();
        var promise = this.rpc.request(this.service, "GetResumeById", data);
        return promise.then(function (data) { return exports.ResumeResponse.decode(new wire_1.BinaryReader(data)); });
    };
    return ResumeServiceClientImpl;
}());
exports.ResumeServiceClientImpl = ResumeServiceClientImpl;
function isSet(value) {
    return value !== null && value !== undefined;
}
